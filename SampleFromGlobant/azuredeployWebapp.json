{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"skuName": {
			"type": "string",
			"allowedValues": [
				"F1",
				"D1",
				"B1",
				"B2",
				"B3",
				"S1",
				"S2",
				"S3",
				"P1",
				"P2",
				"P3",
				"P4"
			],
			"metadata": {
				"description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
			}
		},
		"skuCapacity": {
			"type": "int",
			"minValue": 1,
			"metadata": {
				"description": "Describes plan's instance count"
			}
		},
		"administratorLogin": {
			"type": "string",
			"metadata": {
				"description": "The admin user of the SQL Server"
			}
		},
		"administratorLoginPassword": {
			"type": "securestring",
			"metadata": {
				"description": "The password of the admin user of the SQL Server"
			}
		},
		"cacheSKUName": {
			"type": "string",
			"allowedValues": [
				"Basic",
				"Standard"
			],
			"metadata": {
				"description": "The pricing tier of the new Azure Redis Cache."
			}
		},
		"cacheSKUFamily": {
			"type": "string",
			"allowedValues": [
				"C"
			],
			"metadata": {
				"description": "The family for the sku."
			}
		},
		"cacheSKUCapacity": {
			"type": "int",
			"allowedValues": [
				0,
				1,
				2,
				3,
				4,
				5,
				6
			],
			"metadata": {
				"description": "The size of the new Azure Redis Cache instance. "
			}
		},
		"hostingPlanName": {
			"type": "string"
		},
		"websiteName": {
			"type": "string"
		},
		"collation": {
			"type": "string"
		},
		"databaseName": {
			"type": "string"
		},
		"tier": {
			"type": "string"
		},
		"location": {
			"type": "string"
		},
		"maxSizeBytes": {
			"type": "int"
		},
		"cacheName": {
			"type": "string"
		},
		"serverName": {
			"type": "string"
		},
		"sampleName": {
			"type": "string",
			"defaultValue": ""
		},
		"zoneRedundant": {
			"type": "bool",
			"defaultValue": false
		},
		"licenseType": {
			"type": "string",
			"defaultValue": ""
		},
		"enableATP": {
			"type": "bool",
			"defaultValue": false
		},
		"WebsiteName": {
			"type": "string"
		},
		"appInsightsName": {
			"type": "string"
		},
		"allowAzureIps": {
			"type": "bool",
			"defaultValue": true
		}
	},
	"variables": {},
	 "resources": [
      {
        "name": "[parameters('serverName')]",
        "type": "Microsoft.Sql/servers",
        "location": "[parameters('location')]",
        "tags": {
          "displayName": "SqlServer"
        },
        "apiVersion": "2014-04-01",
        "properties": {
          "administratorLogin": "[parameters('administratorLogin')]",
          "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
          "version": "12.0"
        },
        "resources": [
          {
            "name": "[parameters('databaseName')]",
            "type": "databases",
            "location": "[parameters('location')]",
            "tags": {
              "displayName": "Database"
            },
            "apiVersion": "2017-10-01-preview",
            "dependsOn": [
              "[parameters('serverName')]"
            ],
            "properties": {
			"collation": "[parameters('collation')]",
                        "maxSizeBytes": "[parameters('maxSizeBytes')]",
                        "sampleName": "[parameters('sampleName')]",
                        "zoneRedundant": "[parameters('zoneRedundant')]",
                        "licenseType": "[parameters('licenseType')]"
            }
          },
          {
            "type": "firewallrules",
            "apiVersion": "2014-04-01",
            "dependsOn": [
              "[parameters('serverName')]"
            ],
            "location": "[parameters('location')]",
            "name": "AllowAllWindowsAzureIps",
            "properties": {
              "endIpAddress": "0.0.0.0",
              "startIpAddress": "0.0.0.0"
            }
          }
        ]
      },
		{
			"apiVersion": "2016-03-01",
			"name": "[parameters('hostingPlanName')]",
			"type": "Microsoft.Web/serverfarms",
			"location": "[parameters('location')]",
			"tags": {
				"displayName": "HostingPlan"
			},
			"sku": {
				"name": "[parameters('skuName')]",
				"capacity": "[parameters('skuCapacity')]"
			},
			"properties": {
				"name": "[parameters('hostingPlanName')]"
			}
		},
		{
			"apiVersion": "2016-03-01",
			"name": "[parameters('webSiteName')]",
			"type": "Microsoft.Web/sites",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[parameters('hostingPlanName')]",
				"[concat('Microsoft.Cache/Redis/', parameters('cacheName'))]"
			],
			"tags": {
				"[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName')))]": "empty",
				"displayName": "Website"
			},
			"properties": {
				"name": "[parameters('webSiteName')]",
				"serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
			},
			"resources": [{
					"apiVersion": "2016-03-01",
					"type": "config",
					"name": "connectionstrings",
					"dependsOn": [
						"[parameters('webSiteName')]"
					],
					"properties": {
						"DefaultConnection": {
							"value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', parameters('serverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('databaseName'), ';User Id=', parameters('administratorLogin'), '@', reference(concat('Microsoft.Sql/servers/', parameters('serverName'))).fullyQualifiedDomainName, ';Password=', parameters('administratorLoginPassword'), ';')]",
							"type": "SQLAzure"
						}
					}
				},
				{
					"apiVersion": "2015-08-01",
					"type": "config",
					"name": "appsettings",
					"dependsOn": [
						"[concat('Microsoft.Web/Sites/', parameters('webSiteName'))]",
						"[concat('Microsoft.Cache/Redis/', parameters('cacheName'))]"
					],
					"properties": {
						"CacheConnection": "[concat(parameters('cacheName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', parameters('cacheName')), '2015-08-01').primaryKey)]",
						"APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2014-04-01').InstrumentationKey]"
					}
				}
			]
		},
		{
			"apiVersion": "2015-04-01",
			"name": "[concat(parameters('hostingPlanName'), '-', resourceGroup().name)]",
			"type": "Microsoft.Insights/autoscalesettings",
			"location": "[parameters('location')]",
			"tags": {
				"[concat('hidden-link:', resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName')))]": "Resource",
				"displayName": "AutoScaleSettings"
			},
			"dependsOn": [
				"[parameters('hostingPlanName')]"
			],
			"properties": {
				"profiles": [{
					"name": "Default",
					"capacity": {
						"minimum": 1,
						"maximum": 2,
						"default": 1
					},
					"rules": [{
							"metricTrigger": {
								"metricName": "CpuPercentage",
								"metricResourceUri": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
								"timeGrain": "PT1M",
								"statistic": "Average",
								"timeWindow": "PT10M",
								"timeAggregation": "Average",
								"operator": "GreaterThan",
								"threshold": 80.0
							},
							"scaleAction": {
								"direction": "Increase",
								"type": "ChangeCount",
								"value": 1,
								"cooldown": "PT10M"
							}
						},
						{
							"metricTrigger": {
								"metricName": "CpuPercentage",
								"metricResourceUri": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
								"timeGrain": "PT1M",
								"statistic": "Average",
								"timeWindow": "PT1H",
								"timeAggregation": "Average",
								"operator": "LessThan",
								"threshold": 60.0
							},
							"scaleAction": {
								"direction": "Decrease",
								"type": "ChangeCount",
								"value": 1,
								"cooldown": "PT1H"
							}
						}
					]
				}],
				"enabled": false,
				"name": "[concat(parameters('hostingPlanName'), '-', resourceGroup().name)]",
				"targetResourceUri": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
			}
		},
		{
			"apiVersion": "2015-04-01",
			"name": "[concat('ServerErrors ', parameters('webSiteName'))]",
			"type": "Microsoft.Insights/alertrules",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[parameters('webSiteName')]"
			],
			"tags": {
				"[concat('hidden-link:', resourceId('Microsoft.Web/sites', parameters('webSiteName')))]": "Resource",
				"displayName": "ServerErrorsAlertRule"
			},
			"properties": {
				"name": "[concat('ServerErrors ', parameters('webSiteName'))]",
				"description": "[concat(parameters('webSiteName'), ' has some server errors, status code 5xx.')]",
				"isEnabled": false,
				"condition": {
					"odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
					"dataSource": {
						"odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
						"resourceUri": "[resourceId('Microsoft.Web/sites', parameters('webSiteName'))]",
						"metricName": "Http5xx"
					},
					"operator": "GreaterThan",
					"threshold": 0.0,
					"windowSize": "PT5M"
				},
				"action": {
					"odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
					"sendToServiceOwners": true,
					"customEmails": []
				}
			}
		},
		{
			"apiVersion": "2015-04-01",
			"name": "[concat('ForbiddenRequests ', parameters('webSiteName'))]",
			"type": "Microsoft.Insights/alertrules",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[parameters('webSiteName')]"
			],
			"tags": {
				"[concat('hidden-link:', resourceId('Microsoft.Web/sites', parameters('webSiteName')))]": "Resource",
				"displayName": "ForbiddenRequestsAlertRule"
			},
			"properties": {
				"name": "[concat('ForbiddenRequests ', parameters('webSiteName'))]",
				"description": "[concat(parameters('webSiteName'), ' has some requests that are forbidden, status code 403.')]",
				"isEnabled": false,
				"condition": {
					"odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
					"dataSource": {
						"odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
						"resourceUri": "[resourceId('Microsoft.Web/sites', parameters('webSiteName'))]",
						"metricName": "Http403"
					},
					"operator": "GreaterThan",
					"threshold": 0,
					"windowSize": "PT5M"
				},
				"action": {
					"odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
					"sendToServiceOwners": true,
					"customEmails": []
				}
			}
		},
		{
			"apiVersion": "2015-04-01",
			"name": "[concat('CPUHigh ', parameters('hostingPlanName'))]",
			"type": "Microsoft.Insights/alertrules",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[parameters('hostingPlanName')]"
			],
			"tags": {
				"[concat('hidden-link:', resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName')))]": "Resource",
				"displayName": "CPUHighAlertRule"
			},
			"properties": {
				"name": "[concat('CPUHigh ', parameters('hostingPlanName'))]",
				"description": "[concat('The average CPU is high across all the instances of ', parameters('hostingPlanName'))]",
				"isEnabled": false,
				"condition": {
					"odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
					"dataSource": {
						"odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
						"resourceUri": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
						"metricName": "CpuPercentage"
					},
					"operator": "GreaterThan",
					"threshold": 90,
					"windowSize": "PT15M"
				},
				"action": {
					"odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
					"sendToServiceOwners": true,
					"customEmails": []
				}
			}
		},
		{
			"apiVersion": "2015-04-01",
			"name": "[concat('LongHttpQueue ', parameters('hostingPlanName'))]",
			"type": "Microsoft.Insights/alertrules",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[parameters('hostingPlanName')]"
			],
			"tags": {
				"[concat('hidden-link:', resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName')))]": "Resource",
				"displayName": "AutoScaleSettings"
			},
			"properties": {
				"name": "[concat('LongHttpQueue ', parameters('hostingPlanName'))]",
				"description": "[concat('The HTTP queue for the instances of ', parameters('hostingPlanName'), ' has a large number of pending requests.')]",
				"isEnabled": false,
				"condition": {
					"odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
					"dataSource": {
						"odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
						"resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
						"metricName": "HttpQueueLength"
					},
					"operator": "GreaterThan",
					"threshold": 100.0,
					"windowSize": "PT5M"
				},
				"action": {
					"odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
					"sendToServiceOwners": true,
					"customEmails": []
				}
			}
		},
		{
			"apiVersion": "2015-05-01",
			"name": "[parameters('appInsightsName')]",
			"type": "Microsoft.Insights/components",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[parameters('webSiteName')]"
			],
			"tags": {
				"[concat('hidden-link:', resourceId('Microsoft.Web/sites', parameters('webSiteName')))]": "Resource",
				"displayName": "AppInsightsComponent"
			},
			"properties": {
				"ApplicationId": "[parameters('webSiteName')]"
			}
		},
		{
			"name": "[parameters('cacheName')]",
			"type": "Microsoft.Cache/Redis",
			"location": "[parameters('location')]",
			"apiVersion": "2015-08-01",
			"dependsOn": [],
			"tags": {
				"displayName": "cache"
			},
			"properties": {
				"sku": {
					"name": "[parameters('cacheSKUName')]",
					"family": "[parameters('cacheSKUFamily')]",
					"capacity": "[parameters('cacheSKUCapacity')]"
				}
			}
		}
	],
	"outputs": {
		"siteUri": {
			"type": "string",
			"value": "[reference(concat('Microsoft.Web/sites/', parameters('webSiteName'))).hostnames[0]]"
		},
		"sqlSvrFqdn": {
			"type": "string",
			"value": "[reference(concat('Microsoft.Sql/servers/', parameters('serverName'))).fullyQualifiedDomainName]"
		}
	}
}
